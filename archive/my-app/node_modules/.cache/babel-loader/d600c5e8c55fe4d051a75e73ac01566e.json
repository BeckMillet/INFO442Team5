{"ast":null,"code":"var _jsxFileName = \"/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/Summary.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Card, CardTitle, CardSubtitle, CardText } from 'reactstrap';\nimport 'firebase/database';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nexport default class Summary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let isError = false;\n      let errors = {};\n\n      if (this.state.updateDailyBudget <= 0) {\n        isError = true;\n        errors.dailyBudgetError = 'Must be positive and non-zero';\n      } else {\n        isError = false;\n        errors.amountError = '';\n      }\n\n      if (isError) {\n        this.setState({ ...this.state,\n          ...errors\n        });\n      }\n\n      return isError;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let err = this.validate();\n\n      if (!err) {\n        let newDateChanged = new Date();\n        this.props.handleBudgetChange({\n          lastDateChanged: newDateChanged.toLocaleDateString(),\n          dailyBudget: Number(this.state.updateDailyBudget)\n        });\n        /* resets the form content */\n\n        this.setState({\n          updateDailyBudget: '',\n          dailyBudgetError: \"\"\n        });\n      }\n    };\n\n    this.showHideButton = () => {\n      let button;\n\n      if (this.props.dailyBudget === 0) {\n        button = /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          className: \"btn primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        }, \"Add your daily budget\");\n      }\n\n      if (this.state.updateDailyBudget !== '' & this.props.dailyBudget !== 0) {\n        button = /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          className: \"btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, \"Update!\");\n      }\n\n      return button;\n    };\n\n    this.state = {\n      updateDailyBudget: '',\n      dailyBudgetError: \"\",\n      showHideUpdate: false\n    };\n    this.fieldChange = this.fieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  fieldChange(elem) {\n    const newState = {};\n    newState[elem.currentTarget.name] = elem.currentTarget.value;\n    this.setState(newState);\n  }\n\n  render() {\n    let overallBalance = Number(this.props.budgetToDate) + Number(this.props.dailyBudget) - Number(this.props.expensesToDate);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Summary Section\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"\",\n      type: \"number\",\n      name: \"updateDailyBudget\",\n      placeholder: this.props.dailyBudget.toString(),\n      required: true,\n      error: this.state.dailyBudgetError.length === 0 ? false : true,\n      helperText: this.state.dailyBudgetError,\n      value: this.state.updateDailyBudget,\n      onChange: this.fieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), this.showHideButton()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"balance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Overall Balance is:  \", overallBalance, \" \")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"budget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Your daily budget is: \", this.props.dailyBudget, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/Summary.js"],"names":["React","Component","Card","CardTitle","CardSubtitle","CardText","TextField","Button","Summary","constructor","props","validate","isError","errors","state","updateDailyBudget","dailyBudgetError","amountError","setState","handleSubmit","event","preventDefault","err","newDateChanged","Date","handleBudgetChange","lastDateChanged","toLocaleDateString","dailyBudget","Number","showHideButton","button","showHideUpdate","fieldChange","bind","elem","newState","currentTarget","name","value","render","overallBalance","budgetToDate","expensesToDate","toString","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Card, CardTitle, CardSubtitle, CardText } from 'reactstrap';\nimport 'firebase/database';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nexport default class Summary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateDailyBudget: '',\n      dailyBudgetError: \"\",\n      showHideUpdate: false,\n    };\n    this.fieldChange = this.fieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  fieldChange(elem) {\n    const newState = {};\n    newState[elem.currentTarget.name] = elem.currentTarget.value;\n    this.setState(newState);\n  }\n\n  validate = () => {\n    let isError = false;\n    let errors = {}\n\n    if (this.state.updateDailyBudget <= 0) {\n      isError = true;\n      errors.dailyBudgetError = 'Must be positive and non-zero'\n    } else {\n      isError = false;\n      errors.amountError = ''\n    }\n\n    if (isError) {\n      this.setState({\n        ...this.state,\n        ...errors\n      })\n    }\n\n    return isError;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let err = this.validate();\n    if (!err) {\n      let newDateChanged = new Date();\n      this.props.handleBudgetChange({\n        lastDateChanged: newDateChanged.toLocaleDateString(),\n        dailyBudget: Number(this.state.updateDailyBudget)\n      })\n\n      /* resets the form content */\n      this.setState({\n        updateDailyBudget: '',\n        dailyBudgetError: \"\"\n      })\n    }\n  }\n\n  showHideButton = () => {\n    let button;\n    if(this.props.dailyBudget === 0){\n      button = (<Button type=\"submit\" className=\"btn primary\">Add your daily budget</Button>)\n    }\n    if (this.state.updateDailyBudget !== '' & this.props.dailyBudget !== 0){\n      button = (<Button type=\"submit\" className=\"btn\">Update!</Button>)\n    }\n\n  return button\n  }\n\n\n  render() {\n    let overallBalance = Number(this.props.budgetToDate) + Number(this.props.dailyBudget) - Number(this.props.expensesToDate);\n\n    return (\n      <div className=\"\">\n        <div>\n          Summary Section\n          </div>\n        <form onSubmit={this.handleSubmit} noValidate>\n          <TextField\n            className=\"\"\n            type=\"number\"\n            name=\"updateDailyBudget\"\n            placeholder={this.props.dailyBudget.toString()}\n            required\n            error={this.state.dailyBudgetError.length === 0 ? false : true}\n            helperText={this.state.dailyBudgetError}\n            value={this.state.updateDailyBudget}\n            onChange={this.fieldChange} />\n\n          {/* button */}\n          \n          {this.showHideButton()}\n\n        </form>\n\n        <div>\n          <Card>\n            <CardTitle className = 'balance'>Overall Balance is:  {overallBalance} </CardTitle>\n          </Card>\n          <Card>\n          <CardTitle className = 'budget'>Your daily budget is: {this.props.dailyBudget} </CardTitle>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}