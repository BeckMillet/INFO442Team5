{"ast":null,"code":"var _jsxFileName = \"/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/HistoryCards.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Card, CardTitle, CardSubtitle, CardText } from 'reactstrap';\nimport 'firebase/database';\nexport default class HistoryCards extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formatAmountSpent = amountSpent => {\n      amountSpent = Number(amountSpent).toFixed(2);\n      amountSpent = \"$\" + amountSpent;\n      return amountSpent;\n    };\n  }\n\n  render() {\n    let transactions = this.props.transactions;\n    let renderedEntries = transactions.map(eachEntry => {\n      /* TODO fix each child should have a unique key*/\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, \" \", this.formatAmountSpent(eachEntry.amountSpent), \" \"), /*#__PURE__*/React.createElement(CardSubtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, \" \", eachEntry.date, \" \"), /*#__PURE__*/React.createElement(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, eachEntry.itemName, \" \")));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"History Section\", renderedEntries);\n  }\n\n}","map":{"version":3,"sources":["/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/HistoryCards.js"],"names":["React","Component","Card","CardTitle","CardSubtitle","CardText","HistoryCards","formatAmountSpent","amountSpent","Number","toFixed","render","transactions","props","renderedEntries","map","eachEntry","date","itemName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,YAA1B,EAAwCC,QAAxC,QAAwD,YAAxD;AACA,OAAO,mBAAP;AAGA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAClDM,iBADkD,GAC7BC,WAAD,IAAiB;AACnCA,MAAAA,WAAW,GAAGC,MAAM,CAACD,WAAD,CAAN,CAAoBE,OAApB,CAA4B,CAA5B,CAAd;AACAF,MAAAA,WAAW,GAAG,MAAMA,WAApB;AAEA,aAAOA,WAAP;AACD,KANiD;AAAA;;AAQhDG,EAAAA,MAAM,GAAG;AACP,QAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWD,YAA9B;AACA,QAAIE,eAAe,GAAGF,YAAY,CAACG,GAAb,CAAkBC,SAAD,IAAe;AACpD;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAa,KAAKT,iBAAL,CAAuBS,SAAS,CAACR,WAAjC,CAAb,MADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgBQ,SAAS,CAACC,IAA1B,MAFF,eAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWD,SAAS,CAACE,QAArB,MAHF,CADF,CADF;AASD,KAXqB,CAAtB;AAYA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAECJ,eAFD,CADF;AAMD;;AA5B+C","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Card, CardTitle, CardSubtitle, CardText } from 'reactstrap';\nimport 'firebase/database';\n\n\nexport default class HistoryCards extends Component {\n  formatAmountSpent = (amountSpent) => {\n    amountSpent = Number(amountSpent).toFixed(2)\n    amountSpent = \"$\" + amountSpent\n\n    return amountSpent\n  }\n\n    render() {\n      let transactions = this.props.transactions\n      let renderedEntries = transactions.map((eachEntry) => {\n        /* TODO fix each child should have a unique key*/\n        return (\n          <div>\n            <Card>\n              <CardTitle> {this.formatAmountSpent(eachEntry.amountSpent)} </CardTitle>\n              <CardSubtitle> {eachEntry.date} </CardSubtitle>\n              <CardText>{eachEntry.itemName} </CardText>\n            </Card>\n          </div>\n        )\n      });\n      return (\n        <div>\n          History Section\n        {renderedEntries}\n        </div>\n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}