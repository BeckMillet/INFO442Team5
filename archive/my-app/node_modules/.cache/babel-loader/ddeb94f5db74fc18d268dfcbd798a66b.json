{"ast":null,"code":"var _jsxFileName = \"/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/EntryForm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nexport default class EntryForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let isError = false;\n      let errors = {};\n\n      if (this.state.entryAmount < .01) {\n        isError = true;\n        errors.amountError = 'Must be positive and non-zero';\n      } else {\n        isError = false;\n        errors.amountError = '';\n      }\n\n      if (this.state.entryName === \"\") {\n        isError = true;\n        errors.nameError = 'Required!';\n      } else {\n        isError = false;\n        errors.nameError = '';\n      }\n\n      if (isError) {\n        this.setState({ ...this.state,\n          ...errors\n        });\n      }\n\n      return isError;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let err = this.validate();\n\n      if (!err) {\n        let formDate = this.state.entryDate;\n\n        if (formDate === '') {\n          /* requirement 9 */\n          formDate = new Date();\n        } else {\n          /* requirement 8 */\n          formDate = formDate.substring(5, 10) + \"-\" + formDate.substring(0, 4);\n          formDate = new Date(formDate);\n        }\n\n        ;\n        this.props.addTransToApp({\n          amountSpent: this.state.entryAmount,\n          date: formDate.toLocaleDateString(),\n          itemName: this.state.entryName\n        });\n        /* resets the form content */\n\n        this.setState({\n          entryAmount: '',\n          entryName: '',\n          entryDate: '',\n          amountError: \"\",\n          nameError: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      entryAmount: '',\n      amountError: \"\",\n      entryDate: '',\n      entryName: '',\n      nameError: \"\"\n    };\n    this.fieldChange = this.fieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  fieldChange(elem) {\n    const newState = {};\n    newState[elem.currentTarget.name] = elem.currentTarget.value;\n    this.setState(newState);\n  }\n\n  getToday() {\n    let today = new Date();\n    let year = today.getFullYear().toString();\n    let month = today.getMonth() + 1;\n\n    if (month < 10) {\n      month = month.toString();\n      month = \"0\" + month;\n    } else {\n      month = month.toString();\n    }\n\n    let day = today.getDate().toString();\n\n    if (day < 10) {\n      day = day.toString();\n      day = \"0\" + day;\n    } else {\n      day = day.toString();\n    }\n\n    return year + \"-\" + month + \"-\" + day;\n  }\n\n  render() {\n    let today = this.getToday();\n    let content;\n\n    if (this.props.dailyBudget !== 0) {\n      content = /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"\",\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"entryAmount\",\n        id: \"standard-required\",\n        value: this.state.entryAmount,\n        currencySymbol: \"$\",\n        error: this.state.amountError.length === 0 ? false : true,\n        helperText: this.state.amountError,\n        onChange: this.fieldChange,\n        placeholder: \"Amount Spent*\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"standard-required entryFormItemName\",\n        name: \"entryName\",\n        value: this.state.entryName,\n        placeholder: \"Item Name\",\n        onChange: this.fieldChange,\n        type: \"text\",\n        error: this.state.nameError.length === 0 ? false : true,\n        helperText: this.state.nameError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"entryFormDate\",\n        name: \"entryDate\",\n        label: \"Birthday\",\n        onChange: this.fieldChange,\n        type: \"date\",\n        defaultValue: today,\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, \"Submit!\"));\n    } else {\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }\n      }, \"To get started, add your daily budget in the form above!\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, \"Entry Form Section\", content);\n  }\n\n}","map":{"version":3,"sources":["/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/EntryForm.js"],"names":["React","Component","Button","TextField","EntryForm","constructor","props","validate","isError","errors","state","entryAmount","amountError","entryName","nameError","setState","handleSubmit","event","preventDefault","err","formDate","entryDate","Date","substring","addTransToApp","amountSpent","date","toLocaleDateString","itemName","fieldChange","bind","elem","newState","currentTarget","name","value","getToday","today","year","getFullYear","toString","month","getMonth","day","getDate","render","content","dailyBudget","length","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class EntryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entryAmount: '',\n      amountError: \"\",\n      entryDate: '',\n      entryName: '',\n      nameError: \"\"\n    };\n    this.fieldChange = this.fieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  fieldChange(elem) {\n    const newState = {};\n    newState[elem.currentTarget.name] = elem.currentTarget.value;\n    this.setState(newState);\n  }\n\n  validate = () => {\n    let isError = false;\n    let errors = {}\n\n    if (this.state.entryAmount < .01) {\n      isError = true;\n      errors.amountError = 'Must be positive and non-zero'\n    } else {\n      isError = false;\n      errors.amountError = ''\n    }\n\n    if (this.state.entryName === \"\") {\n      isError = true;\n      errors.nameError = 'Required!'\n    } else {\n      isError = false;\n      errors.nameError = ''\n    }\n\n    if (isError) {\n      this.setState({\n        ...this.state,\n        ...errors\n      })\n    }\n\n    return isError;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    let err = this.validate();\n    if (!err) {\n      let formDate = this.state.entryDate;\n      if (formDate === '') {\n        /* requirement 9 */\n        formDate = new Date();\n      } else {\n        /* requirement 8 */\n        formDate = formDate.substring(5, 10) + \"-\" + formDate.substring(0,4)\n        formDate = new Date(formDate);\n      };\n      this.props.addTransToApp({\n        amountSpent: this.state.entryAmount,\n        date: formDate.toLocaleDateString(),\n        itemName: this.state.entryName\n      })\n\n      /* resets the form content */\n      this.setState({\n        entryAmount: '',\n        entryName: '',\n        entryDate: '',\n        amountError: \"\",\n        nameError: \"\"\n      })\n    }\n  }\n\n  getToday() {\n    let today = new Date()\n    let year = today.getFullYear().toString()\n    let month = today.getMonth() + 1\n    if (month < 10) {\n      month = month.toString()\n      month = \"0\" + month\n    } else {\n      month = month.toString()\n    }\n    let day = today.getDate().toString()\n    if (day < 10) {\n      day = day.toString()\n      day = \"0\" + day\n    } else {\n      day = day.toString()\n    }\n\n    return year + \"-\" + month + \"-\" + day\n  }\n\n  render() {\n    let today = this.getToday()\n    let content;\n\n    if (this.props.dailyBudget !== 0) {\n      content = (\n        <form onSubmit={this.handleSubmit} className=\"\" noValidate>\n          <TextField\n            name=\"entryAmount\"\n            id=\"standard-required\"\n            value={this.state.entryAmount}\n            currencySymbol=\"$\"\n            error={this.state.amountError.length === 0 ? false : true}\n            helperText={this.state.amountError}\n            onChange={this.fieldChange}\n            placeholder=\"Amount Spent*\"\n          />\n\n          <TextField\n            required\n            id=\"standard-required entryFormItemName\"\n            name=\"entryName\"\n            value={this.state.entryName}\n            placeholder=\"Item Name\"\n            onChange={this.fieldChange}\n            type=\"text\"\n            error={this.state.nameError.length === 0 ? false : true}\n            helperText={this.state.nameError}\n          />\n\n          <TextField\n            id=\"entryFormDate\"\n            name=\"entryDate\"\n            label=\"Birthday\"\n            onChange={this.fieldChange}\n            type=\"date\"\n            defaultValue={today}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <Button type=\"submit\" className=\"btn\">Submit!</Button>\n        </form>\n      )\n    } else{\n      content = (\n      <div>\n        To get started, add your daily budget in the form above!\n      </div>\n      )\n    }\n    return (\n      <div>\n        Entry Form Section\n        {content}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}