{"ast":null,"code":"var _jsxFileName = \"/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main';\nimport StyledFirebaseAuth from '../node_modules/react-firebaseui/StyledFirebaseAuth';\nimport firebase from '../node_modules/firebase';\nimport 'firebase/database';\nimport { Row } from 'reactstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.uiConfig = {\n      signInOptions: [{\n        provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        requireDisplayName: true\n      }, firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n      credentialHelper: 'none',\n      signInFlow: 'popup'\n    };\n\n    this.handleSignOut = () => {\n      this.setState({\n        errorMessage: null\n      });\n      firebase.auth().signOut();\n    };\n\n    this.handleNewUser = () => {\n      let currentUser = this.state.user.displayName;\n      let userRef = firebase.database().ref(currentUser);\n      let lastDateOpenedRef = userRef.child('lastDateOpened');\n      let dailyBudgetRef = userRef.child('dailyBudget');\n      let budgetToDateRef = userRef.child('budgetToDate');\n      let expensesToDateRef = userRef.child('expensesToDate');\n      let transactionsRef = userRef.child('transactions');\n      let today = new Date();\n      today = today.toLocaleDateString();\n      userRef.once(\"value\", snapshot => {\n        if (!snapshot.exists()) {\n          //constructs the schema for new users\n          lastDateOpenedRef.set(today);\n          dailyBudgetRef.set(0);\n          transactionsRef.push({\n            \"amountSpent\": 0,\n            \"itemName\": \"Sample Transaction!\",\n            \"date\": today\n          });\n          budgetToDateRef.set(0);\n          expensesToDateRef.set(0); //future iterations will allow users to create and modify a 'tag' list for categorization. Sample below\n\n          /* let defaultTagList = [\"food\", \"fitness\", \"social\", \"hobbies\", \"gas\", \"parking\"]\n          tagListRef.set(defaultTagList) */\n        } else {}\n      });\n    };\n\n    this.state = {\n      user: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      this.setState({\n        loading: false\n      });\n      this.setState({\n        user: firebaseUser\n      });\n    });\n    /* let currentUser = this.state.user.displayName;\n    let userRef = firebase.database().ref(currentUser);\n     let lastDateOpenedRef = userRef.child('lastDateOpened');\n    let dailyBudgetRef = userRef.child('dailyBudget');\n    let budgetToDateRef = userRef.child('budgetToDate');\n    let expensesToDateRef = userRef.child('expensesToDate');\n    let transactionsRef = userRef.child('transactions');\n     */\n\n    /* TODO delete sample data */\n\n    /* this.setState({\n      transactions: SAMPLE_TRANSACTIONS.transactions\n    })\n    this.setState({\n      dailyBudget: 25\n    })\n    this.setState({\n      lastDateChanged: '4/20/2020'\n    })\n    this.setState({\n      expensesToDate: 79.36\n    })\n     this.setState({\n      budgetToDate: 100\n    })\n     this.setState({\n      lastDateOpened: new Date('4/23/2020')\n    }) */\n  }\n  /* firebase */\n\n\n  render() {\n    let content = null;\n    /* firebase userauth */\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin fa-3x\",\n        \"aria-label\": \"Connecting...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }));\n    } else if (!this.state.user) {\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, \"Sign Up\"), /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n        uiConfig: this.uiConfig,\n        firebaseAuth: firebase.auth(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      this.handleNewUser();\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Main, {\n        currentUser: this.state.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        className: \"logoutbuttonrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: this.handleSignOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, \"Log Out \", this.state.user.displayName)));\n    }\n\n    return content;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/App.js"],"names":["React","Component","Main","StyledFirebaseAuth","firebase","Row","App","constructor","props","uiConfig","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","requireDisplayName","GoogleAuthProvider","credentialHelper","signInFlow","handleSignOut","setState","errorMessage","signOut","handleNewUser","currentUser","state","user","displayName","userRef","database","ref","lastDateOpenedRef","child","dailyBudgetRef","budgetToDateRef","expensesToDateRef","transactionsRef","today","Date","toLocaleDateString","once","snapshot","exists","set","push","loading","componentDidMount","onAuthStateChanged","firebaseUser","render","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,kBAAP,MAA+B,qDAA/B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,mBAAP;AACA,SAASC,GAAT,QAAoB,YAApB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SASnBC,QATmB,GASR;AACTC,MAAAA,aAAa,EAAE,CAAC;AACdC,QAAAA,QAAQ,EAAEP,QAAQ,CAACQ,IAAT,CAAcC,iBAAd,CAAgCC,WAD5B;AAEdC,QAAAA,kBAAkB,EAAE;AAFN,OAAD,EAIfX,QAAQ,CAACQ,IAAT,CAAcI,kBAAd,CAAiCF,WAJlB,CADN;AAOTG,MAAAA,gBAAgB,EAAE,MAPT;AAQTC,MAAAA,UAAU,EAAE;AARH,KATQ;;AAAA,SA6DnBC,aA7DmB,GA6DH,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACAjB,MAAAA,QAAQ,CAACQ,IAAT,GAAgBU,OAAhB;AACD,KAhEkB;;AAAA,SAoEnBC,aApEmB,GAoEH,MAAM;AACpB,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,WAAlC;AACA,UAAIC,OAAO,GAAGxB,QAAQ,CAACyB,QAAT,GAAoBC,GAApB,CAAwBN,WAAxB,CAAd;AAEA,UAAIO,iBAAiB,GAAGH,OAAO,CAACI,KAAR,CAAc,gBAAd,CAAxB;AACA,UAAIC,cAAc,GAAGL,OAAO,CAACI,KAAR,CAAc,aAAd,CAArB;AACA,UAAIE,eAAe,GAAGN,OAAO,CAACI,KAAR,CAAc,cAAd,CAAtB;AACA,UAAIG,iBAAiB,GAAGP,OAAO,CAACI,KAAR,CAAc,gBAAd,CAAxB;AACA,UAAII,eAAe,GAAGR,OAAO,CAACI,KAAR,CAAc,cAAd,CAAtB;AAEA,UAAIK,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,MAAAA,KAAK,GAAGA,KAAK,CAACE,kBAAN,EAAR;AAGAX,MAAAA,OAAO,CAACY,IAAR,CAAa,OAAb,EAAsBC,QAAQ,IAAI;AAChC,YAAI,CAACA,QAAQ,CAACC,MAAT,EAAL,EAAwB;AACtB;AACAX,UAAAA,iBAAiB,CAACY,GAAlB,CAAsBN,KAAtB;AACAJ,UAAAA,cAAc,CAACU,GAAf,CAAmB,CAAnB;AACAP,UAAAA,eAAe,CAACQ,IAAhB,CACE;AACE,2BAAe,CADjB;AAEE,wBAAY,qBAFd;AAGE,oBAAQP;AAHV,WADF;AAMAH,UAAAA,eAAe,CAACS,GAAhB,CAAoB,CAApB;AACAR,UAAAA,iBAAiB,CAACQ,GAAlB,CAAsB,CAAtB,EAXsB,CAYtB;;AACA;;AAED,SAfD,MAgBK,CACJ;AACF,OAnBD;AAqBD,KAvGkB;;AAEjB,SAAKlB,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXmB,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAcDC,EAAAA,iBAAiB,GAAG;AAClB1C,IAAAA,QAAQ,CAACQ,IAAT,GAAgBmC,kBAAhB,CAAoCC,YAAD,IAAkB;AACnD,WAAK5B,QAAL,CAAc;AAAEyB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKzB,QAAL,CAAc;AAAEM,QAAAA,IAAI,EAAEsB;AAAR,OAAd;AACD,KAHD;AAKA;;;;;;;;;AAUA;;AACA;;;;;;;;;;;;;;;;;;AAqBD;AAED;;;AA8CAC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,IAAd;AACA;;AACA,QAAI,KAAKzB,KAAL,CAAWoB,OAAf,EAAwB;AACtBK,MAAAA,OAAO,gBACL;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,6BAAb;AAA2C,sBAAW,eAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAMO,IAAI,CAAC,KAAKzB,KAAL,CAAWC,IAAhB,EAAsB;AAC3BwB,MAAAA,OAAO,gBACL;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAE,KAAKzC,QAAnC;AAA6C,QAAA,YAAY,EAAEL,QAAQ,CAACQ,IAAT,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KAPM,MAOA;AACL,WAAKW,aAAL;AACA2B,MAAAA,OAAO,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKP,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAKM,KAAL,CAAWC,IAAX,CAAgBC,WAD3B,CADF,CAFJ,CADF;AAUD;;AACD,WAAQuB,OAAR;AACD;;AAzIyB;;AAgJ5B,eAAe5C,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport Main from './Main'\n\nimport StyledFirebaseAuth from '../node_modules/react-firebaseui/StyledFirebaseAuth';\nimport firebase from '../node_modules/firebase';\nimport 'firebase/database';\nimport { Row } from 'reactstrap';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n    };\n  }\n\n\n  uiConfig = {\n    signInOptions: [{\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    },\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n    ],\n    credentialHelper: 'none',\n    signInFlow: 'popup'\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((firebaseUser) => {\n      this.setState({ loading: false });\n      this.setState({ user: firebaseUser });\n    })\n\n    /* let currentUser = this.state.user.displayName;\n    let userRef = firebase.database().ref(currentUser);\n\n    let lastDateOpenedRef = userRef.child('lastDateOpened');\n    let dailyBudgetRef = userRef.child('dailyBudget');\n    let budgetToDateRef = userRef.child('budgetToDate');\n    let expensesToDateRef = userRef.child('expensesToDate');\n    let transactionsRef = userRef.child('transactions');\n     */\n\n    /* TODO delete sample data */\n    /* this.setState({\n      transactions: SAMPLE_TRANSACTIONS.transactions\n    })\n    this.setState({\n      dailyBudget: 25\n    })\n    this.setState({\n      lastDateChanged: '4/20/2020'\n    })\n    this.setState({\n      expensesToDate: 79.36\n    })\n\n    this.setState({\n      budgetToDate: 100\n    })\n\n    this.setState({\n      lastDateOpened: new Date('4/23/2020')\n    }) */\n\n  }\n\n  /* firebase */\n  handleSignOut = () => {\n    this.setState({ errorMessage: null });\n    firebase.auth().signOut();\n  }\n\n\n\n  handleNewUser = () => {\n    let currentUser = this.state.user.displayName;\n    let userRef = firebase.database().ref(currentUser);\n\n    let lastDateOpenedRef = userRef.child('lastDateOpened');\n    let dailyBudgetRef = userRef.child('dailyBudget');\n    let budgetToDateRef = userRef.child('budgetToDate');\n    let expensesToDateRef = userRef.child('expensesToDate');\n    let transactionsRef = userRef.child('transactions');\n\n    let today = new Date();\n    today = today.toLocaleDateString()\n\n\n    userRef.once(\"value\", snapshot => {\n      if (!snapshot.exists()) {\n        //constructs the schema for new users\n        lastDateOpenedRef.set(today)\n        dailyBudgetRef.set(0)\n        transactionsRef.push(\n          {\n            \"amountSpent\": 0,\n            \"itemName\": \"Sample Transaction!\",\n            \"date\": today\n          })\n        budgetToDateRef.set(0)\n        expensesToDateRef.set(0)\n        //future iterations will allow users to create and modify a 'tag' list for categorization. Sample below\n        /* let defaultTagList = [\"food\", \"fitness\", \"social\", \"hobbies\", \"gas\", \"parking\"]\n        tagListRef.set(defaultTagList) */\n      }\n      else {\n      }\n    });\n\n  }\n\n\n  render() {\n    let content = null;\n    /* firebase userauth */\n    if (this.state.loading) {\n      content = (\n        <div className=\"text-center\">\n          <i className=\"fa fa-spinner fa-spin fa-3x\" aria-label=\"Connecting...\"></i>\n        </div>\n      );\n    } else if (!this.state.user) {\n      content = (\n        <div className=\"container\">\n          <h1>Sign Up</h1>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n        </div>\n      );\n    } else {\n      this.handleNewUser()\n      content = (\n        <div>\n          <Main currentUser={this.state.user} />\n            <Row className=\"logoutbuttonrow\">\n              <button className=\"btn btn-warning\" onClick={this.handleSignOut}>\n                Log Out {this.state.user.displayName}\n              </button>\n            </Row>\n        </div>\n      )\n    }\n    return (content);\n  }\n\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}