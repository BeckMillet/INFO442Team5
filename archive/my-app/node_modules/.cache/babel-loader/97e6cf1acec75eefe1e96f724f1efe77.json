{"ast":null,"code":"var _jsxFileName = \"/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/Summary.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Card, CardTitle, Row, Col, Jumbotron } from 'reactstrap';\nimport 'firebase/database';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nexport default class Summary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let isError = false;\n      let errors = {};\n\n      if (this.state.updateDailyBudget <= 0) {\n        isError = true;\n        errors.dailyBudgetError = 'Must be positive and non-zero';\n      } else {\n        isError = false;\n        errors.amountError = '';\n      }\n\n      if (isError) {\n        this.setState({ ...this.state,\n          ...errors\n        });\n      }\n\n      return isError;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let err = this.validate();\n\n      if (!err) {\n        let newDateChanged = new Date();\n        let rounded = Number(this.state.updateDailyBudget).toFixed(2);\n        this.props.handleBudgetChange({\n          lastDateChanged: newDateChanged.toLocaleDateString(),\n          dailyBudget: rounded\n        });\n        /* resets the form content */\n\n        this.setState({\n          updateDailyBudget: '',\n          dailyBudgetError: \"\"\n        });\n      }\n    };\n\n    this.showHideButton = () => {\n      let button;\n\n      if (this.props.dailyBudget === 0) {\n        button = /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          className: \"btn primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, \"Add your daily budget\");\n      }\n\n      if (this.state.updateDailyBudget !== '' & this.props.dailyBudget !== 0) {\n        button = /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          className: \"btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, \"Update!\");\n      }\n\n      return button;\n    };\n\n    this.state = {\n      updateDailyBudget: '',\n      dailyBudgetError: \"\",\n      showHideUpdate: false\n    };\n    this.fieldChange = this.fieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  fieldChange(elem) {\n    const newState = {};\n    newState[elem.currentTarget.name] = elem.currentTarget.value;\n    this.setState(newState);\n  }\n\n  calcMonthName() {\n    let month = new Array(12);\n    month[0] = \"January\";\n    month[1] = \"February\";\n    month[2] = \"March\";\n    month[3] = \"April\";\n    month[4] = \"May\";\n    month[5] = \"June\";\n    month[6] = \"July\";\n    month[7] = \"August\";\n    month[8] = \"September\";\n    month[9] = \"October\";\n    month[10] = \"November\";\n    month[11] = \"December\";\n    return month;\n  }\n\n  render() {\n    let overallBalance = Number(this.props.budgetToDate) + Number(this.props.dailyBudget) - Number(this.props.expensesToDate);\n    let today = new Date();\n    let month = this.calcMonthName();\n    today = month[today.getMonth()] + \" \" + today.getDate() + \", \" + today.getFullYear();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, today), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"budget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"Daily Budget:\", /*#__PURE__*/React.createElement(TextField, {\n      className: \"budgetText\",\n      type: \"number\",\n      name: \"updateDailyBudget\",\n      placeholder: this.props.dailyBudget.toString(),\n      required: true,\n      error: this.state.dailyBudgetError.length === 0 ? false : true,\n      helperText: this.state.dailyBudgetError,\n      value: this.state.updateDailyBudget,\n      onChange: this.fieldChange,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          className: \"budgetText\",\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 27\n          }\n        }, \"$\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 22\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      body: true,\n      className: \"balance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"Overall Balance: \", overallBalance, \" \")))), this.showHideButton())));\n  }\n\n}","map":{"version":3,"sources":["/Users/beckmillet/Documents/INFO442/INFO442Team5/archive/my-app/src/Summary.js"],"names":["React","Component","Card","CardTitle","Row","Col","Jumbotron","TextField","Button","InputAdornment","Summary","constructor","props","validate","isError","errors","state","updateDailyBudget","dailyBudgetError","amountError","setState","handleSubmit","event","preventDefault","err","newDateChanged","Date","rounded","Number","toFixed","handleBudgetChange","lastDateChanged","toLocaleDateString","dailyBudget","showHideButton","button","showHideUpdate","fieldChange","bind","elem","newState","currentTarget","name","value","calcMonthName","month","Array","render","overallBalance","budgetToDate","expensesToDate","today","getMonth","getDate","getFullYear","toString","length","startAdornment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Card, CardTitle, Row, Col, Jumbotron } from 'reactstrap';\nimport 'firebase/database';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\nexport default class Summary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateDailyBudget: '',\n      dailyBudgetError: \"\",\n      showHideUpdate: false,\n    };\n    this.fieldChange = this.fieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  fieldChange(elem) {\n    const newState = {};\n    newState[elem.currentTarget.name] = elem.currentTarget.value;\n    this.setState(newState);\n  }\n\n  validate = () => {\n    let isError = false;\n    let errors = {}\n\n    if (this.state.updateDailyBudget <= 0) {\n      isError = true;\n      errors.dailyBudgetError = 'Must be positive and non-zero'\n    } else {\n      isError = false;\n      errors.amountError = ''\n    }\n\n    if (isError) {\n      this.setState({\n        ...this.state,\n        ...errors\n      })\n    }\n\n    return isError;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let err = this.validate();\n    if (!err) {\n      let newDateChanged = new Date();\n      let rounded = Number(this.state.updateDailyBudget).toFixed(2)\n      this.props.handleBudgetChange({\n        lastDateChanged: newDateChanged.toLocaleDateString(),\n        dailyBudget: rounded\n      })\n\n      /* resets the form content */\n      this.setState({\n        updateDailyBudget: '',\n        dailyBudgetError: \"\"\n      })\n    }\n  }\n\n  showHideButton = () => {\n    let button;\n    if (this.props.dailyBudget === 0) {\n      button = (<Button type=\"submit\" className=\"btn primary\">Add your daily budget</Button>)\n    }\n    if (this.state.updateDailyBudget !== '' & this.props.dailyBudget !== 0) {\n      button = (<Button type=\"submit\" className=\"btn\">Update!</Button>)\n    }\n\n    return button\n  }\n\n  calcMonthName() {\n    let month = new Array(12);\n    month[0] = \"January\";\n    month[1] = \"February\";\n    month[2] = \"March\";\n    month[3] = \"April\";\n    month[4] = \"May\";\n    month[5] = \"June\";\n    month[6] = \"July\";\n    month[7] = \"August\";\n    month[8] = \"September\";\n    month[9] = \"October\";\n    month[10] = \"November\";\n    month[11] = \"December\";\n\n    return month;\n  }\n\n  render() {\n    let overallBalance = Number(this.props.budgetToDate) + Number(this.props.dailyBudget) - Number(this.props.expensesToDate);\n\n    let today = new Date();\n    let month = this.calcMonthName()\n    today = month[today.getMonth()] + \" \" + today.getDate() + \", \" + today.getFullYear()\n    return (\n      <div>\n\n        <Jumbotron>\n          <div className=\"date\">\n            {today}\n          </div>\n          <form onSubmit={this.handleSubmit} noValidate>\n            <Row>\n              <Col>\n                <Card className='budget' >\n                  <CardTitle>Daily Budget:\n                     <TextField\n                      className=\"budgetText\"\n                      type=\"number\"\n                      name=\"updateDailyBudget\"\n                      placeholder={this.props.dailyBudget.toString()}\n                      required\n                      error={this.state.dailyBudgetError.length === 0 ? false : true}\n                      helperText={this.state.dailyBudgetError}\n                      value={this.state.updateDailyBudget}\n                      onChange={this.fieldChange}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment className=\"budgetText\" position=\"start\">\n                            $\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </CardTitle>\n                </Card>\n              </Col>\n              <Col>\n                <Card body className='balance'>\n                  <CardTitle>Overall Balance: {overallBalance} </CardTitle>\n                </Card>\n              </Col>\n            </Row>\n            {this.showHideButton()}\n          </form>\n        </Jumbotron>\n\n\n\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}